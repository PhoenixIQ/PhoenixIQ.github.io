/**
 * @generated
 */
module.exports = [
  {
    "path": "2019/12/03/Introduce.html",
    "content": "\n下面对 Docusaurus 做个简要的介绍\n\n## 安装\n\n需要有node yarn 环境 Node >= 8.x and Yarn >= 1.5\n\n```\n// 安装 Docusaurus\nyarn global add docusaurus-init 或 npm install --global docusaurus-init\n// 安装完成之后，创建站点目录 并运行\ndocusaurus-init\n```\n\n## 目录介绍\n\n利用 Docusaurus 生成的站点的目录结构如下：\n\n``` \nphoenix-website\n├── Dockerfile\n├── README.md\n├── docs\n│   ├── assets 文档中用到的静态文件放这里\n│   ├── phoenix-1.x\n│   │   └── phoenix 1.x 版本的文档放在这里\n│   ├── phoenix-2.x\n│   │   └── phoenix 1.x 版本的文档放在这里\n└── website\n    ├── blog\n    │   └── 博客文章放在这里\n    ├── core\n    │   └── Footer.js\n    ├── package.json\n    ├── pages\n    ├── sidebars.json\n    ├── siteConfig.js\n    └── static\n```\n\n## 如何发布一篇博客\n\n[如何发布一篇博客](2019-11-27-blog-introduction.md)\n\n## 如何新增文档\n\n[如何新增文档](2019-11-28-docs-publish.md)\n\n## 版本管理机制\n[版本管理机制](2019-11-27-docs-versions.md)",
    "title": "Docusaurus 介绍",
    "author": "yanliang.gao",
    "authorImageURL": "https://secure.gravatar.com/avatar/6e52e95ab454c5a82b0eb13055d79bd5?s=72&d=identicon",
    "id": "Docusaurus 介绍",
    "date": "2019-12-03T06:00:00.000Z",
    "seconds": 1575352800
  },
  {
    "path": "2019/11/28/docs-publish.html",
    "content": "\n要发布一篇文档(docs)，需要进行如下流程：\n\n - 在docs文件夹下新增md文件\n - 修改对应版本的 sidebar.json 文件进行展示\n - 重新部署\n\n\n\n在 `/docs` 文件夹下添加相应的 `.md` 文档文件，确保每个文件中都包含 `header` 的头信息。 \n\nheader 头信息包含以下几项：\n\n - id - 唯一的文档ID。如果此字段不存在，则文档的ID将默认为其文件名（不带扩展名）。\n - title - 文件标题。如果不存在此字段，则文档标题将默认为其ID。\n - hide_title - 是否将标题隐藏在文档顶部。\n - description - 文档描述，将成为<head>中的<meta name =“ description” content =“ ...” />和<meta property =“ og：description” content =“ ...” />通过搜索引擎。如果此字段不存在，它将默认为内容的第一行。\n - sidebar_label - 该文档的侧边栏和下一个/上一个按钮中显示的文本。如果此字段不存在，则文档的sidebar_label将默认为其标题。\n - custom_edit_url - 用于编辑此文档的URL。如果不存在此字段，则文档的编辑URL将从siteConfig.js的可选字段退回到editUrl。 这个待评估是否需要\n\n示例：\n\n<!--truncate-->\n\n```\n// 一般来说每篇文档添加以下三个信息就足够了，特殊需求，酌情添加\n---\nid: doc1\ntitle: My Document\nsidebar_label: Document\n---\n```\n\n## 更多功能\n\n### 链接到其他文档\n\n可以使用其他文档文件的相对URL，这些文档文件在呈现时会自动转换为相应的文档。\n\n例如：\n\n```\n[This links to another document](other-document.md)\n```\n\n### 链接到图像和其它资源\n\n可以使用相对URL以与文档相同的方式链接静态资产。\n\n在文档和博客中使用的静态资产应分别进入 docs/assets 和 website/blog/assets。 Markdown 被转换成正确的链接路径, 这样这些路径就能为所有语言和版本的文档所用。\n\n例如：\n\n```\n![alt-text](assets/doc-image.png)\n```\n\n\n## 侧边栏 & 导航栏\n\n文档写好之后，我们需要将该文档添加到侧边栏的合适位置，不然文档不会显示\n\n可以在website / sidebars.json文件中配置侧边栏的内容及其文档的顺序。\n\n在sidebars.json中，将您在文档标题中使用的ID添加到现有的侧边栏/类别中。\n\n在下面的示例中，docs是侧边栏的名称，而Getting Started是侧边栏中的类别。\n\n```\n{\n  \"docs\": {\n    \"Getting Started\": [\n      \"getting-started\"\n    ],\n    ...\n  },\n  ...\n}\n```\n\n对于位于docs子目录中的文档，如下所示：\n\n```\ndocs\n└── dir1\n    └── getting-started.md\n\n{\n  \"docs\": {\n    \"My New Sidebar Category\": [\n      \"dir1/getting-started\"\n    ],\n    ...\n  },\n  ...\n}\n```\n\n在 Docs 页面中，左边是侧边栏，展示文档的目录结构，需要我们自己维护。右边是每一篇文档的目录，自动展示，默认按照标题结构展示目录。\n\n### 添加子类别\n\n可以将子类别添加到侧边栏。您可以传递一个对象，其中键将是子类别名称，值是该子类别的ID数组，而不是像前面的示例那样将ID用作类别数组的内容。\n\n```\n{\n  \"docs\": {\n    \"My Example Category\": [\n      \"examples\",\n      {\n        \"type\": \"subcategory\",\n        \"label\": \"My Example Subcategory\",\n        \"ids\": [\n          \"my-examples\",\n          ...\n        ]\n      },\n      {\n        \"type\": \"subcategory\",\n        \"label\": \"My Next Subcategory\",\n        \"ids\": [\n          \"some-other-examples\"\n        ]\n      },\n      \"even-more-examples\",\n      ...\n    ],\n    ...\n  }\n}\n\n/*\nThe above will generate:\n\n- My Example Category\n  - examples\n  - My Example Subcategory\n    - my-examples\n    ...\n  - My Next Subcategory\n    - some-other-examples\n  - even-more-examples\n  ...\n*/\n```\n\n### 添加新的侧边栏\n\n您也可以将文档放在新的侧边栏中。\n\n在下面的示例中，将在sidebars.json中创建一个examples-sidebar侧边栏，该侧边栏的类别为My Example Category，其中包含ID为my-examples的文档。\n\n```\n{\n  \"examples-sidebar\": {\n    \"My Example Category\": [\n      \"my-examples\"\n    ],\n    ...\n  },\n  ...\n}\n```\n\n> 注意： 经过测试发现使用版本管理之后 每次修改 sidebars.json 发布之后不会生效，要想生效需要重新打新的版本。\n> **或者** 修改对应版本的 sidebars.json 然后重新部署\n\n### 添加导航栏项目\n\n添加导航栏项目需要在配置文件 `siteConfig.js` 中进行配置， 这里直接通过两个例子，来展示如何在导航栏添加项目\n\n例如：在 docs 文件夹下面有一篇文档是 phoenix 白皮书，现在将这片文档添加到导航栏上\n\n文档id为：whitepaper \n\n```js\n  headerLinks: [\n    {href: \"http://phoenix-website.sz.iquantex.com/docs/next/phoenix-1.x/quick-start-1x\", label: \"Phoenix1.x\"},\n    {href: \"http://phoenix-website.sz.iquantex.com/docs/next/phoenix-2.x/quick-start-2x\", label: \"Phoenix2.x\"},\n    {blog: true, label: '博客'},\n    {page: 'help', label: '帮助'},\n    {page: 'users', label: '使用用户'},\n  ],\n```\n",
    "title": "发布文档的流程介绍",
    "author": "yanliang.gao",
    "authorImageURL": "https://secure.gravatar.com/avatar/6e52e95ab454c5a82b0eb13055d79bd5?s=72&d=identicon",
    "id": "发布文档的流程介绍",
    "date": "2019-11-28T06:00:00.000Z",
    "seconds": 1574920800
  },
  {
    "path": "2019/11/27/docs-versions.html",
    "content": "\nDocusaurus 提供了版本管理的功能。但是经过研究和讨论，发现 Docusaurus 提供的版本管理功能仅适用于文档本身的版本管理，并不适用于 Phoenix 的版本管理需求。\n\n现结合 Docusaurus 暂定了一套 Phoenix 的版本管理机制，请各位评审一下是否合适：\n\n<!--truncate-->\n\n鉴于我们的文档是统一放在 `docs` 目录下的，可以通过不同的目录来区分不同的版本，以现在phoenix 的 1.x版本和2.x版本为例\n\n分别在 `docs` 目录下创建文件夹 phoenix-1.x 和 phoenix-2.x，目录结构如下\n\n``` \nphoenix-website\n├── docs\n│   ├── assets 文档中用到的静态文件放这里\n│   ├── phoenix-1.x\n│   │   └── phoenix 1.x 版本的文档放在这里\n│   ├── phoenix-2.x\n│   │   └── phoenix 1.x 版本的文档放在这里\n```\n\n然后通过在 `url` 在导航栏展示不同版本的地址。\n\nDocusaurus 提供的版本管理机制，用作文档自身的版本管理，这两种可共同使用。\n\n下面介绍下 Docusaurus 提供的版本管理机制的使用方式：\n\n> 使用 Docusaurus 的版本功能需要一些配置，这些配置在初始化 phoenix-website 的过程中已经配置过了，所以这里直接介绍如何使用。想要了解如何配置的可以参考[https://docusaurus.io/docs/zh-CN/1.9.x/versioning](https://docusaurus.io/docs/zh-CN/1.9.x/versioning)\n\n## 如何创建新版本\n\n要想使用 Docusaurus 的版本管理功能，需要本地安装有 Docusaurus 环境，具体的安装方法参考[Docusaurus 介绍](2019-12-03-Introduce.md)\n\n使用想要创建的版本（这里使用版本号1.0.0）的命令行参数运行脚本\n\n```\nyarn run version 1.0.0\n```\n\n该命令将会保留当前 `docs` 目录中的所有文档，作为版本1.0.0的文档。\n\n版本生成之后将自动在网站导航栏的标题旁边显示最新的版本号\n\n## 版本号的格式\n\n可以使用任何所需的格式创建版本号，并且可以使用任何版本号创建新版本，只要它与现有版本不匹配即可。版本顺序由创建版本的顺序决定，与版本编号方式无关。\n\n## 历史版本\n\n版本化文档放置在 `website/versioned_docs/version-${version}` 中，其中 `${version}` 是您提供的版本脚本的版本号。\n\n版本化的侧边栏被复制到 `website/versioned_sidebars` 中，并命名为 `version-${version}-sidebars.json`\n\n首次添加版本时会创建一个 `website/versions.json` 文件，Docusaurus使用该文件来检测存在哪些版本。每次添加新版本时，都会将其添加到 `versions.json` 文件中。\n\n如果您希望更改旧版本的文档，则可以访问相应版本的文件。\n\n每次指定新版本时，只会复制docs目录中的文件和侧边栏文件中与最新版本不同的文件。如果版本之间没有变化，Docusaurus将使用该文件的最新版本。\n\n例如，对于最新版本1.0.0，存在原始ID为doc1的文档，并且其内容与docs目录中具有ID doc1的文档相同。创建新版本2.0.0时，不会将doc1的文件复制到versioned_docs / version-2.0.0 /中。仍然会有docs / 2.0.0 / doc1.html的页面，但是它将使用版本1.0.0的文件。\n\n## 重命名现有版本\n\n运行带有命令行参数的脚本，脚本的第一个参数是当前版本名称，然后是第二个新版本名称。例如\n\n```\nyarn run rename-version 1.0.0 1.0.1\n```\n\n\n\n\n",
    "title": "docs 版本管理",
    "author": "yanliang.gao",
    "authorImageURL": "https://secure.gravatar.com/avatar/6e52e95ab454c5a82b0eb13055d79bd5?s=72&d=identicon",
    "id": "docs 版本管理",
    "date": "2019-11-27T06:00:00.000Z",
    "seconds": 1574834400
  },
  {
    "path": "2019/11/27/blog-introduction.html",
    "content": "\n简单介绍一下 Docusaurus 中发布 blog 的步骤和写法。\n\n<!--truncate-->\n\n## 发布博客\n\n要在博客中发布文章，请在博客目录（`website/blog/`）中创建一个格式为 `YYYY-MM-DD-my-blog-post-title.md` 的文件。\n\n## 文章顶部信息选项 <必选>\n\n每篇文章可以添加一些相应的信息（作者名、头像...）\n\n```\n---\ntitle: Introducing Docusaurus\nauthor: Joel Marcey\nauthorURL: http://twitter.com/JoelMarcey\nauthorFBID: 611217057\nauthorTwitter: JoelMarcey\n---\nLorem Ipsum...\n```\n\n - author - 作者署名 （必填）\n - authorURL - 与作者关联的URL。可以是Twitter，GitHub，Facebook帐户等。\n - authorFBID - 用于获取个人资料图片的Facebook个人资料ID。(这个我们一般用不到)\n - authorImageURL - 作者头像\n - title - 文章名\n\n## 摘要截取 <可选>\n\n在博客文章中使用 `<！-truncate->` 标记表示在查看所有已发布的博客文章时将显示为摘要的内容。 `<！-truncate->` 标记以上的内容都会成为摘要。\n\n```\n---\ntitle: Truncation Example\n---\nAll this will be part of the blog post summary.\n\nEven this.\n\n<!--truncate-->\n\nBut anything from here on down will not be.\n\nNot this.\n\nOr this.\n```\n \n## 更改侧栏标题 <可选>\n\n可以通过将 `blogSidebarTitle` 设置添加到 `siteConfig.js` 来配置特定的侧边栏标题。 \n\n## 社交按钮 <可选>\n\n如果想在文章底部显示Facebook与(或)Twitter社交按钮，那么在网站设置的siteConfig.js中配置facebookAppId 与(或) twitter选项。\n\n\n参考文章：https://docusaurus.io/docs/zh-CN/adding-blog",
    "title": "Docusaurus blog 写法介绍",
    "author": "yanliang.gao",
    "authorImageURL": "https://secure.gravatar.com/avatar/6e52e95ab454c5a82b0eb13055d79bd5?s=72&d=identicon",
    "id": "Docusaurus blog 写法介绍",
    "date": "2019-11-27T06:00:00.000Z",
    "seconds": 1574834400
  }
];
